version: '3.7'

volumes:
    prometheus_data: {}
    grafana_data: {}
networks:
  front-tier:
  back-tier:
  default:

services:


  traefik:
    image: "traefik:latest"
    container_name: "traefik"
    networks:
      - default
      - back-tier
      - front-tier
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=true"
      - "--entrypoints.web.address=:80"
      #- "--entrypoints.websecure.address=:443"
      #- "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      #- "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      #- "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      #- "--certificatesresolvers.myresolver.acme.email=thecloudroot@gmail.com"
      #- "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      #- "443:443"
      - "8080:8080"
    volumes:
      #- "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - ./traefik/traefik.toml:/etc/traefik/traefik.toml"

  whoami:
    image: "containous/whoami"
    container_name: "simple-service"
    networks:
      - back-tier
      - front-tier
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.thecloudroot.com`)"
      - "traefik.http.routers.whoami.entrypoints=web"
      #- "traefik.http.routers.whoami.tls.certresolver=myresolver"
    restart: always





  prometheus:
    image: prom/prometheus:v2.1.0
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.alertmanager-prometheus.rule=Host(`alertmanager-prometheus.thecloudroot.com`)"
      - "traefik.http.routers.alertmanager-prometheus.entrypoints=web"
    ports:
      - 9090:9090
    links:
#      - cadvisor:cadvisor
      - alertmanager:alertmanager
#    depends_on:
#      - cadvisor
    networks:
      - back-tier
      - front-tier
    restart: always
#    deploy:
#      placement:
#        constraints:
#          - node.hostname == ${HOSTNAME}

#  node-exporter:
#    image: prom/node-exporter
#    volumes:
#      - /proc:/host/proc:ro
#      - /sys:/host/sys:ro
#      - /:/rootfs:ro
#    command: 
#      - '--path.procfs=/host/proc' 
#      - '--path.sysfs=/host/sys'
#      - --collector.filesystem.ignored-mount-points
#      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
#    ports:
#      - 9100:9100
#    networks:
#      - back-tier
#    restart: always

  alertmanager:
    image: prom/alertmanager
    ports:
      - 9094:9093
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    networks:
      - back-tier
    restart: always
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
#    deploy:
#      placement:
#        constraints:
#          - node.hostname == ${HOSTNAME}

#  cadvisor:
#    image: google/cadvisor
#    volumes:
#      - /:/rootfs:ro
#      - /var/run:/var/run:rw
#      - /sys:/sys:ro
#      - /var/lib/docker/:/var/lib/docker:ro
#    ports:
#      - 8443:8080
#    networks:
#      - back-tier
#    restart: always


  grafana:
    image: grafana/grafana
    user: "472"
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    networks:
      - back-tier
      - front-tier
    restart: always

  blackbox-exporter:
    image: prom/blackbox-exporter:master
    volumes:
      - ./blackbox/:/config
    command:
      - '--config.file=/config/blackbox.yml'
    ports:
      - 9115:9115
    networks:
      - back-tier
#      - front-tier
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.blackbox-exporter-prometheus.rule=Host(`blackbox.thecloudroot.com`)"
      - "traefik.http.routers.blackbox-exporter-prometheus.entrypoints=web"


#      labels:
#        - "traefik.enable=true"
#        - "traefik.http.routers.blackbox-exporter-prometheus.rule=Host(`blackbox.thecloudroot.com`)"
#        - "traefik.http.routers.blackbox-exporter-prometheus.entrypoints=web"
  
  